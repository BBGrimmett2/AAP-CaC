---
- name: Output Automation Controller Configs
  hosts: aap-dev
  gather_facts: false
  vars:
    controller_version: "2.4"

    controller_username: "{{ username }}"
    controller_password: "{{ password }}"
    controller_hostname: "{{ export_controller_host }}"
    controller_validate_certs: "false"
    controller_api_plugin: awx.awx.controller_api
    # controller_api_plugin: ansible.controller.controller_api
    output_path: "/home/{{ ansible_user }}/ansible/CaC/group_vars/all"

    flatten_output: true


  pre_tasks:

    - name: Set API Endpoint fact v2.4
      ansible.builtin.set_fact:
        endpoint: /api/v2/tokens/
      when: controller_version == "2.4"

    - name: Set API Endpoint fact v2.5
      ansible.builtin.set_fact:
        endpoint: /api/controller/v2/tokens/
      when: controller_version == "2.5"

    - name: "Setup authentication (block)"
      no_log: "{{ controller_configuration_filetree_create_secure_logging | default('false') }}"
      when: controller_oauthtoken is not defined
      tags:
        - always
      block:
        - name: "Get the Authentication Token for the future requests v2.4"
          ansible.builtin.uri:
            url: "https://{{ controller_hostname }}{{ endpoint }}"
            user: "{{ username }}"
            password: "{{ password }}"
            method: POST
            force_basic_auth: true
            validate_certs: "{{ controller_validate_certs }}"
            status_code: 201
          register: authtoken_res

        - name: Debug;
          debug:
            msg: "{{ authtoken_res }}"

        - name: "Set the oauth token to be used since now"
          ansible.builtin.set_fact:
            controller_oauthtoken: "{{ authtoken_res.json.token }}"
            controller_oauthtoken_url: "{{ authtoken_res.json.url }}"

    - name: Recursively remove output directory
      ansible.builtin.file:
        path: "{{ output_path }}"
        state: absent

  roles:
    - infra.controller_configuration.filetree_create

  post_tasks:
    - name: "Delete the Authentication Token used"
      ansible.builtin.uri:
        url: "https://{{ controller_hostname }}{{ controller_oauthtoken_url }}"
        user: "{{ username }}"
        password: "{{ password }}"
        method: DELETE
        force_basic_auth: true
        validate_certs: "{{ controller_validate_certs }}"
        status_code: 204
      when: controller_oauthtoken_url is defined

    - name: Read hosts.yaml file into variable
      ansible.builtin.slurp:
        src: "{{ output_path }}/hosts.yaml"
      register: file_content

    - name: Decode file content from base64
      ansible.builtin.set_fact:
        decoded_content: "{{ file_content.content | b64decode }}"

...
